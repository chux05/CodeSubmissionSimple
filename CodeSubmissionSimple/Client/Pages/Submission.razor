@page "/Submission/"
@using CodeSubmissionSimple.Client.Services
<h3>Test Environment</h3>
<style>
    .container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .item {
        width: 48%;
        height: 100px;
        margin-bottom: 2%;
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }

        .item:nth-child(3n) {
            width: 100%;
        }

    .top {
        height: 60vh;
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }

    .bottom {
        height: 20vh;
        box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;
    }

    .btn-container {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-items: center;
        width: 100%;
    }

    #prev {
        justify-self: flex-start;
    }

    #next {
        justify-self: flex-start;
    }

    #submit {
        justify-self: flex-end;
    }


    textarea {
        width: 60%;
    }

    .right {
        width: 40%;
    }
</style><label>Temp code : @TempCode</label>
<div class="container-fluid wrapper">
    <div class="left">
        <!--TextArea-->
        @if (Questions != null)
        {
            <textarea @bind="TempCode" rows="15"></textarea>
        }

    </div>
    <div class="border-left right">
        <!--Question-->
        @if (Questions != null)
        {
            <br>
            @if (Questions.Count > counter)
            {
                <p><h4>Question:</h4> <br />@(Questions[counter].Description)</p>
            }

        }
    </div>
</div>
<div class="row bottom">
    <div class="col-sm-8 buttons btn-container">
        <!--Buttons-->
        @if (counter > 0)
        {
            <button id="prev" type="button" class="btn  btn-primary btn-lg" @onclick="Previous">Prev</button>
        }
        @if (counter < Length - 1)
        {
            <button id="next" type="button" class="btn btn-primary btn-lg btn-success" @onclick="Next">Next</button>
        }
        else
        {
            <button id="submit" type="button" class="btn btn-primary btn-lg btn-success" @onclick="Submit">Submit Your Code</button>
        }
    </div>

</div>

@code {
    [Inject]
    IQuestionDataService _qClient { get; set; }
    ISubmisstionDataService _sClient { get; set; }

    Submission submission { get; set; } = new Submission();
    List<Question> Questions { get; set; } = new List<Question>();

    string TempCode { get; set; } = "";

    int counter { get; set; } = 0;
    int Length { get; set; } = 0;
    protected override async Task OnInitializedAsync()
    {
        //figure out which method to call.
        counter = 0;
        Length = submission.
        Length = Questions.Count();
        setStub(counter);
    }

    private void setStub(int counter)
    {
        if (counter > 0 || counter < Length)
        {
            TempCode = Questions[counter].CodeStub;
        }
    }

    private string getStub(int counter)
    {
        string code = "";
        if (counter >= 0 || counter < Length)
        {
            code = Questions[counter].CodeStub;
        }
        else
        {

        }
        return code;
    }
    private void Previous()
    {
        Questions[counter].CodeStub = TempCode;
        if (counter > 0)
        {
            --counter;
        }
        setStub(counter);
    }
    private void Next()
    {
        Questions[counter].CodeStub = TempCode;
        if (counter < Length)
        {
            ++counter;
        }
        setStub(counter);
    }
    private void Submit()
    {
        //navigate to submission page
    }
}
